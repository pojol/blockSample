// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Avatar.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Avatar.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ItemInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ItemInfo> {
} _ItemInfo_default_instance_;
class BagGridDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BagGrid> {
} _BagGrid_default_instance_;
class AvatarDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Avatar> {
} _Avatar_default_instance_;

namespace protobuf_Avatar_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfo, dictid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfo, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGrid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGrid, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGrid, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Avatar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Avatar, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Avatar, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Avatar, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Avatar, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Avatar, mp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Avatar, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Avatar, grids_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ItemInfo)},
  { 7, -1, sizeof(BagGrid)},
  { 13, -1, sizeof(Avatar)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagGrid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Avatar_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Avatar.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _ItemInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _BagGrid_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Avatar_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ItemInfo_default_instance_.DefaultConstruct();
  _BagGrid_default_instance_.DefaultConstruct();
  _Avatar_default_instance_.DefaultConstruct();
  _BagGrid_default_instance_.get_mutable()->info_ = const_cast< ::ItemInfo*>(
      ::ItemInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014Avatar.proto\"4\n\010ItemInfo\022\n\n\002id\030\001 \001(\003\022\016"
      "\n\006dictId\030\002 \001(\r\022\014\n\004name\030\003 \001(\t\"/\n\007BagGrid\022"
      "\027\n\004info\030\001 \001(\0132\t.ItemInfo\022\013\n\003pos\030\002 \001(\r\"\256\002"
      "\n\006Avatar\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\034\n\005st"
      "ate\030\003 \001(\0162\r.Avatar.State\022\n\n\002hp\030\004 \001(\r\022\n\n\002"
      "mp\030\005 \001(\r\022\014\n\004gold\030\006 \001(\r\022\027\n\005grids\030\007 \003(\0132\010."
      "BagGrid\"\254\001\n\005State\022\017\n\013LOGIN_READY\020\000\022\r\n\tLO"
      "GIN_ING\020\001\022\021\n\rLOGIN_SUCCESS\020\002\022\n\n\006GAMING\020\003"
      "\022\016\n\nJUMP_READY\020\004\022\014\n\010JUMP_ING\020\005\022\020\n\014JUMP_S"
      "UCCESS\020\006\022\020\n\014LOGOUT_READY\020\007\022\016\n\nLOGOUT_ING"
      "\020\010\022\022\n\016LOGOUT_SUCCESS\020\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 430);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Avatar.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Avatar_2eproto

const ::google::protobuf::EnumDescriptor* Avatar_State_descriptor() {
  protobuf_Avatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Avatar_2eproto::file_level_enum_descriptors[0];
}
bool Avatar_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Avatar_State Avatar::LOGIN_READY;
const Avatar_State Avatar::LOGIN_ING;
const Avatar_State Avatar::LOGIN_SUCCESS;
const Avatar_State Avatar::GAMING;
const Avatar_State Avatar::JUMP_READY;
const Avatar_State Avatar::JUMP_ING;
const Avatar_State Avatar::JUMP_SUCCESS;
const Avatar_State Avatar::LOGOUT_READY;
const Avatar_State Avatar::LOGOUT_ING;
const Avatar_State Avatar::LOGOUT_SUCCESS;
const Avatar_State Avatar::State_MIN;
const Avatar_State Avatar::State_MAX;
const int Avatar::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemInfo::kIdFieldNumber;
const int ItemInfo::kDictIdFieldNumber;
const int ItemInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemInfo::ItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Avatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ItemInfo)
}
ItemInfo::ItemInfo(const ItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&dictid_) -
    reinterpret_cast<char*>(&id_) + sizeof(dictid_));
  // @@protoc_insertion_point(copy_constructor:ItemInfo)
}

void ItemInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&dictid_) -
    reinterpret_cast<char*>(&id_) + sizeof(dictid_));
  _cached_size_ = 0;
}

ItemInfo::~ItemInfo() {
  // @@protoc_insertion_point(destructor:ItemInfo)
  SharedDtor();
}

void ItemInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemInfo::descriptor() {
  protobuf_Avatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Avatar_2eproto::file_level_metadata[0].descriptor;
}

const ItemInfo& ItemInfo::default_instance() {
  protobuf_Avatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemInfo* ItemInfo::New(::google::protobuf::Arena* arena) const {
  ItemInfo* n = new ItemInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ItemInfo)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&dictid_) -
    reinterpret_cast<char*>(&id_) + sizeof(dictid_));
}

bool ItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dictId = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dictid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ItemInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ItemInfo)
  return false;
#undef DO_
}

void ItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ItemInfo)
  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // uint32 dictId = 2;
  if (this->dictid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dictid(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ItemInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:ItemInfo)
}

::google::protobuf::uint8* ItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ItemInfo)
  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // uint32 dictId = 2;
  if (this->dictid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dictid(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ItemInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ItemInfo)
  return target;
}

size_t ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ItemInfo)
  size_t total_size = 0;

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // uint32 dictId = 2;
  if (this->dictid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dictid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ItemInfo)
    MergeFrom(*source);
  }
}

void ItemInfo::MergeFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.dictid() != 0) {
    set_dictid(from.dictid());
  }
}

void ItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemInfo::CopyFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemInfo::IsInitialized() const {
  return true;
}

void ItemInfo::Swap(ItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemInfo::InternalSwap(ItemInfo* other) {
  name_.Swap(&other->name_);
  std::swap(id_, other->id_);
  std::swap(dictid_, other->dictid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemInfo::GetMetadata() const {
  protobuf_Avatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Avatar_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemInfo

// int64 id = 1;
void ItemInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ItemInfo::id() const {
  // @@protoc_insertion_point(field_get:ItemInfo.id)
  return id_;
}
void ItemInfo::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.id)
}

// uint32 dictId = 2;
void ItemInfo::clear_dictid() {
  dictid_ = 0u;
}
::google::protobuf::uint32 ItemInfo::dictid() const {
  // @@protoc_insertion_point(field_get:ItemInfo.dictId)
  return dictid_;
}
void ItemInfo::set_dictid(::google::protobuf::uint32 value) {
  
  dictid_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.dictId)
}

// string name = 3;
void ItemInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ItemInfo::name() const {
  // @@protoc_insertion_point(field_get:ItemInfo.name)
  return name_.GetNoArena();
}
void ItemInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ItemInfo.name)
}
#if LANG_CXX11
void ItemInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ItemInfo.name)
}
#endif
void ItemInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ItemInfo.name)
}
void ItemInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ItemInfo.name)
}
::std::string* ItemInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ItemInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ItemInfo::release_name() {
  // @@protoc_insertion_point(field_release:ItemInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ItemInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ItemInfo.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagGrid::kInfoFieldNumber;
const int BagGrid::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagGrid::BagGrid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Avatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagGrid)
}
BagGrid::BagGrid(const BagGrid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ItemInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  pos_ = from.pos_;
  // @@protoc_insertion_point(copy_constructor:BagGrid)
}

void BagGrid::SharedCtor() {
  ::memset(&info_, 0, reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&info_) + sizeof(pos_));
  _cached_size_ = 0;
}

BagGrid::~BagGrid() {
  // @@protoc_insertion_point(destructor:BagGrid)
  SharedDtor();
}

void BagGrid::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void BagGrid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagGrid::descriptor() {
  protobuf_Avatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Avatar_2eproto::file_level_metadata[1].descriptor;
}

const BagGrid& BagGrid::default_instance() {
  protobuf_Avatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagGrid* BagGrid::New(::google::protobuf::Arena* arena) const {
  BagGrid* n = new BagGrid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagGrid::Clear() {
// @@protoc_insertion_point(message_clear_start:BagGrid)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  pos_ = 0u;
}

bool BagGrid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagGrid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ItemInfo info = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pos = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagGrid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagGrid)
  return false;
#undef DO_
}

void BagGrid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagGrid)
  // .ItemInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // uint32 pos = 2;
  if (this->pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pos(), output);
  }

  // @@protoc_insertion_point(serialize_end:BagGrid)
}

::google::protobuf::uint8* BagGrid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagGrid)
  // .ItemInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, false, target);
  }

  // uint32 pos = 2;
  if (this->pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pos(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:BagGrid)
  return target;
}

size_t BagGrid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagGrid)
  size_t total_size = 0;

  // .ItemInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // uint32 pos = 2;
  if (this->pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagGrid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagGrid)
  GOOGLE_DCHECK_NE(&from, this);
  const BagGrid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagGrid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagGrid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagGrid)
    MergeFrom(*source);
  }
}

void BagGrid::MergeFrom(const BagGrid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagGrid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    mutable_info()->::ItemInfo::MergeFrom(from.info());
  }
  if (from.pos() != 0) {
    set_pos(from.pos());
  }
}

void BagGrid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagGrid::CopyFrom(const BagGrid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagGrid::IsInitialized() const {
  return true;
}

void BagGrid::Swap(BagGrid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagGrid::InternalSwap(BagGrid* other) {
  std::swap(info_, other->info_);
  std::swap(pos_, other->pos_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagGrid::GetMetadata() const {
  protobuf_Avatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Avatar_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagGrid

// .ItemInfo info = 1;
bool BagGrid::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void BagGrid::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ItemInfo& BagGrid::info() const {
  // @@protoc_insertion_point(field_get:BagGrid.info)
  return info_ != NULL ? *info_
                         : *::ItemInfo::internal_default_instance();
}
::ItemInfo* BagGrid::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ItemInfo;
  }
  // @@protoc_insertion_point(field_mutable:BagGrid.info)
  return info_;
}
::ItemInfo* BagGrid::release_info() {
  // @@protoc_insertion_point(field_release:BagGrid.info)
  
  ::ItemInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void BagGrid::set_allocated_info(::ItemInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:BagGrid.info)
}

// uint32 pos = 2;
void BagGrid::clear_pos() {
  pos_ = 0u;
}
::google::protobuf::uint32 BagGrid::pos() const {
  // @@protoc_insertion_point(field_get:BagGrid.pos)
  return pos_;
}
void BagGrid::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagGrid.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Avatar::kIdFieldNumber;
const int Avatar::kNameFieldNumber;
const int Avatar::kStateFieldNumber;
const int Avatar::kHpFieldNumber;
const int Avatar::kMpFieldNumber;
const int Avatar::kGoldFieldNumber;
const int Avatar::kGridsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Avatar::Avatar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Avatar_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Avatar)
}
Avatar::Avatar(const Avatar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      grids_(from.grids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&id_) + sizeof(gold_));
  // @@protoc_insertion_point(copy_constructor:Avatar)
}

void Avatar::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&id_) + sizeof(gold_));
  _cached_size_ = 0;
}

Avatar::~Avatar() {
  // @@protoc_insertion_point(destructor:Avatar)
  SharedDtor();
}

void Avatar::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Avatar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Avatar::descriptor() {
  protobuf_Avatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Avatar_2eproto::file_level_metadata[2].descriptor;
}

const Avatar& Avatar::default_instance() {
  protobuf_Avatar_2eproto::InitDefaults();
  return *internal_default_instance();
}

Avatar* Avatar::New(::google::protobuf::Arena* arena) const {
  Avatar* n = new Avatar;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Avatar::Clear() {
// @@protoc_insertion_point(message_clear_start:Avatar)
  grids_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&id_) + sizeof(gold_));
}

bool Avatar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Avatar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Avatar.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Avatar.State state = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::Avatar_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hp = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gold = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagGrid grids = 7;
      case 7: {
        if (tag == 58u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_grids()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Avatar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Avatar)
  return false;
#undef DO_
}

void Avatar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Avatar)
  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Avatar.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .Avatar.State state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // uint32 hp = 4;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hp(), output);
  }

  // uint32 mp = 5;
  if (this->mp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mp(), output);
  }

  // uint32 gold = 6;
  if (this->gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->gold(), output);
  }

  // repeated .BagGrid grids = 7;
  for (unsigned int i = 0, n = this->grids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->grids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Avatar)
}

::google::protobuf::uint8* Avatar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Avatar)
  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Avatar.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .Avatar.State state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // uint32 hp = 4;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hp(), target);
  }

  // uint32 mp = 5;
  if (this->mp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mp(), target);
  }

  // uint32 gold = 6;
  if (this->gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->gold(), target);
  }

  // repeated .BagGrid grids = 7;
  for (unsigned int i = 0, n = this->grids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->grids(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Avatar)
  return target;
}

size_t Avatar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avatar)
  size_t total_size = 0;

  // repeated .BagGrid grids = 7;
  {
    unsigned int count = this->grids_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->grids(i));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // .Avatar.State state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // uint32 hp = 4;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());
  }

  // uint32 mp = 5;
  if (this->mp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp());
  }

  // uint32 gold = 6;
  if (this->gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Avatar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Avatar)
  GOOGLE_DCHECK_NE(&from, this);
  const Avatar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Avatar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Avatar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Avatar)
    MergeFrom(*source);
  }
}

void Avatar::MergeFrom(const Avatar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avatar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grids_.MergeFrom(from.grids_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.mp() != 0) {
    set_mp(from.mp());
  }
  if (from.gold() != 0) {
    set_gold(from.gold());
  }
}

void Avatar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Avatar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Avatar::CopyFrom(const Avatar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avatar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Avatar::IsInitialized() const {
  return true;
}

void Avatar::Swap(Avatar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Avatar::InternalSwap(Avatar* other) {
  grids_.UnsafeArenaSwap(&other->grids_);
  name_.Swap(&other->name_);
  std::swap(id_, other->id_);
  std::swap(state_, other->state_);
  std::swap(hp_, other->hp_);
  std::swap(mp_, other->mp_);
  std::swap(gold_, other->gold_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Avatar::GetMetadata() const {
  protobuf_Avatar_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Avatar_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Avatar

// int64 id = 1;
void Avatar::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Avatar::id() const {
  // @@protoc_insertion_point(field_get:Avatar.id)
  return id_;
}
void Avatar::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Avatar.id)
}

// string name = 2;
void Avatar::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Avatar::name() const {
  // @@protoc_insertion_point(field_get:Avatar.name)
  return name_.GetNoArena();
}
void Avatar::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Avatar.name)
}
#if LANG_CXX11
void Avatar::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Avatar.name)
}
#endif
void Avatar::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Avatar.name)
}
void Avatar::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Avatar.name)
}
::std::string* Avatar::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Avatar.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Avatar::release_name() {
  // @@protoc_insertion_point(field_release:Avatar.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Avatar::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Avatar.name)
}

// .Avatar.State state = 3;
void Avatar::clear_state() {
  state_ = 0;
}
::Avatar_State Avatar::state() const {
  // @@protoc_insertion_point(field_get:Avatar.state)
  return static_cast< ::Avatar_State >(state_);
}
void Avatar::set_state(::Avatar_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:Avatar.state)
}

// uint32 hp = 4;
void Avatar::clear_hp() {
  hp_ = 0u;
}
::google::protobuf::uint32 Avatar::hp() const {
  // @@protoc_insertion_point(field_get:Avatar.hp)
  return hp_;
}
void Avatar::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:Avatar.hp)
}

// uint32 mp = 5;
void Avatar::clear_mp() {
  mp_ = 0u;
}
::google::protobuf::uint32 Avatar::mp() const {
  // @@protoc_insertion_point(field_get:Avatar.mp)
  return mp_;
}
void Avatar::set_mp(::google::protobuf::uint32 value) {
  
  mp_ = value;
  // @@protoc_insertion_point(field_set:Avatar.mp)
}

// uint32 gold = 6;
void Avatar::clear_gold() {
  gold_ = 0u;
}
::google::protobuf::uint32 Avatar::gold() const {
  // @@protoc_insertion_point(field_get:Avatar.gold)
  return gold_;
}
void Avatar::set_gold(::google::protobuf::uint32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:Avatar.gold)
}

// repeated .BagGrid grids = 7;
int Avatar::grids_size() const {
  return grids_.size();
}
void Avatar::clear_grids() {
  grids_.Clear();
}
const ::BagGrid& Avatar::grids(int index) const {
  // @@protoc_insertion_point(field_get:Avatar.grids)
  return grids_.Get(index);
}
::BagGrid* Avatar::mutable_grids(int index) {
  // @@protoc_insertion_point(field_mutable:Avatar.grids)
  return grids_.Mutable(index);
}
::BagGrid* Avatar::add_grids() {
  // @@protoc_insertion_point(field_add:Avatar.grids)
  return grids_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagGrid >*
Avatar::mutable_grids() {
  // @@protoc_insertion_point(field_mutable_list:Avatar.grids)
  return &grids_;
}
const ::google::protobuf::RepeatedPtrField< ::BagGrid >&
Avatar::grids() const {
  // @@protoc_insertion_point(field_list:Avatar.grids)
  return grids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
